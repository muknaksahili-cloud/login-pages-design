import { TemplateRef, SimpleChange } from '@angular/core';
import { Observable } from 'rxjs';

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type NzSafeAny = any;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

type FunctionProp<T> = (...args: NzSafeAny[]) => T;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type NzDirectionVHType = 'vertical' | 'horizontal';
type NzFourDirectionType = 'top' | 'bottom' | 'left' | 'right';

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

interface IndexableObject {
    [key: string]: NzSafeAny;
}

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

type NgClassType = string | string[] | NgClassInterface;
interface NgClassInterface {
    [klass: string]: NzSafeAny;
}
interface NgStyleInterface {
    [klass: string]: NzSafeAny;
}

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type NzSizeLDSType = 'large' | 'default' | 'small';
type NzSizeLMSType = 'large' | 'middle' | 'small';
type NzSizeMDSType = 'middle' | 'default' | 'small';
type NzSizeDSType = 'default' | 'small';

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

/**
 * A joined type of string and `TemplateRef<void>`.
 */
type NzTSType = string | TemplateRef<void>;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type NzShapeSCType = 'square' | 'circle';

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

type CompareWith = (o1: NzSafeAny, o2: NzSafeAny) => boolean;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

type OnTouchedType = () => NzSafeAny;
type OnChangeType = (value: NzSafeAny) => void;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type BooleanInput = boolean | string | undefined | null;
type NumberInput = number | string | undefined | null;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */

interface InputObservable {
    getInputObservable<K extends keyof this>(changeType: K): Observable<SimpleChange>;
}

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
declare const tuple: <T extends string[]>(...args: T) => T;

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type NzStatus = '' | 'error' | 'warning';
type NzValidateStatus = '' | 'success' | 'warning' | 'error' | 'validating';

/**
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
type NzVariant = 'outlined' | 'filled' | 'borderless' | 'underlined';

export { tuple };
export type { BooleanInput, CompareWith, FunctionProp, IndexableObject, InputObservable, NgClassInterface, NgClassType, NgStyleInterface, NumberInput, NzDirectionVHType, NzFourDirectionType, NzSafeAny, NzShapeSCType, NzSizeDSType, NzSizeLDSType, NzSizeLMSType, NzSizeMDSType, NzStatus, NzTSType, NzValidateStatus, NzVariant, OnChangeType, OnTouchedType };
